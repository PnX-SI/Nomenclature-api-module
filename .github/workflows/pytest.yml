name: pytest

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Debian 10"
            python-version: "3.7"
            postgres-version: 11
            postgis-version: 2.5
          - name: "Debian 11"
            python-version: "3.9"
            postgres-version: 13
            postgis-version: 3.2

    name: ${{ matrix.name }}

    services:
      postgres:
        image: postgis/postgis:${{ matrix.postgres-version }}-${{ matrix.postgis-version }}
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Add postgis_raster database extension
      if: ${{ matrix.postgis-version >= 3 }}
      run: |
        psql -h localhost -U postgres -d postgres -tc 'CREATE EXTENSION "postgis_raster";'
      env:
        PGPASSWORD: postgres
    - name: Add database extensions
      run: |
        psql -h localhost -U postgres -d postgres -tc 'CREATE EXTENSION "uuid-ossp";'
        psql -h localhost -U postgres -d postgres -tc 'CREATE EXTENSION "pg_trgm";'
      env:
        PGPASSWORD: postgres
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install \
          pytest-cov \
          -e .[tests] \
          -e file:dependencies/Utils-Flask-SQLAlchemy#egg=utils-flask-sqlalchemy \
          -e file:dependencies/TaxHub#egg=taxhub \
          -e file:dependencies/UsersHub-authentification-module#egg=pypnusershub
    - name: Install database
      run: |
        flask db upgrade ref_geo@head -x local-srid=2154
        flask db upgrade nomenclatures_taxonomie@head
        flask db autoupgrade
        flask db upgrade taxonomie_inpn_data@head  # will be removed in future in favor of manual command to insert taxref referential
        flask db upgrade nomenclatures_taxonomie_data@head
      env:
        NOMENCLATURE_SETTINGS: test_settings.py
    - name: Test with pytest
      run: |
        pytest -v --cov --cov-report xml
      env:
        NOMENCLATURE_SETTINGS: test_settings.py
    - name: Upload coverage to Codecov
      if: ${{ matrix.name == 'Debian 11' }}
      uses: codecov/codecov-action@v2
      with:
        flags: pytest
